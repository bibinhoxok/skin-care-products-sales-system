import { z } from "zod";
import { extendZod, zId, zUUID } from "@zodyac/zod-mongoose";

// Extend zod with additional functions (!!important)
extendZod(z);

// Define payment method enum
const paymentMethods = [
  "CASH",
  "CREDIT_CARD",
  "BANK_TRANSFER",
  "MOMO",
  "ZALO_PAY",
] as const;

// Define payment status enum
const paymentStatuses = [
  "PENDING",
  "COMPLETED",
  "FAILED",
  "CANCELLED",
] as const;

// Define the schema (!!important)
export const PaymentSchema = z.object({
  orderId: zUUID(), // Reference to an Order
  customerId: zUUID(), // Reference to a Customer
  amount: z.number().positive(),
  method: z.enum(paymentMethods), // Payment method should be one of the predefined options
  status: z.enum(paymentStatuses).default("PENDING"), // Default status is PENDING
  transactionId: z.string().optional(), // Optional transaction ID from third-party payment gateways
  createdAt: z.date().default(new Date()), // Default value generated by mongoose
  updatedAt: z.date().default(new Date()),
});

// Define the schema with ID (!!important)
export const zPaymentSchemaUpdate = PaymentSchema.extend({
  _id: zUUID(), // Default value will be generated by mongoose
});

export type Payment = z.infer<typeof PaymentSchema>;
